description = 'GoCD Plugin for connecting with MicroFocus ALM Octane'

group = "com.hpe.adm.octane.ciplugins"

version = "1.1"

apply plugin: 'base' // provides cleaning task
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'signing'
apply plugin: 'maven'
//apply plugin: 'maven-publish'

/*publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			url nexusUrl

			credentials {
				username = nexusUserName
				password = nexusPassword
			}
		}
    }
 }*/


//Uploading archives

configurations {
    deployerJars
}


uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: nexusUrl) {
            authentication(userName: nexusUserName, password: nexusPassword)
        }

    }
}


//Downloading archives
repositories {
	mavenLocal()
	mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.7


dependencies {
	compile 'cd.go.plugin:go-plugin-api:17.9.+'
	compile('com.hpe.adm.octane.ciplugins:integrations-sdk:1.5.3')
	compile 'com.google.code.gson:gson:2.8.+'
	compile 'org.apache.httpcomponents:httpclient:4.5.2' // this httpclient is also contained in the SDK, but some classes of it are missing, so we need to have the original file.

	runtime 'commons-logging:commons-logging:1.2' // necessary for the httpclient

	testCompile 'junit:junit:4.12'
}

jar {
	into('lib') { // as specified by GoCD all necessary libraries should be bundled in lib.
		from configurations.runtime
	}

	baseName 'gocd-ci-plugin'
}

signing {
     sign configurations.archives	
}

